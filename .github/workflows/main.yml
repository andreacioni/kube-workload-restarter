name: Publish
#on:
#  push:
#    tags:
#      - 'v*'
on:
  push:
    branches:
      - master
jobs:
  #publish:
  #    name: Build & Publish
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
#
  #      - name: Set up QEMU
  #        uses: docker/setup-qemu-action@v2
  #      
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #      
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v2
  #        with:
  #          username: ${{ secrets.DOCKERHUB_USERNAME }}
  #          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
  #      - name: Build and push
  #        uses: docker/build-push-action@v4
  #        with:
  #          push: true
  #          tags: andreacioni/k8s-workload-restarter:latest,andreacioni/k8s-workload-restarter:0.0.21
  #        
  release:
    name: Release Chart
    runs-on: ubuntu-latest
    #needs: publish
    permissions:
      contents: write
    steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 100

        - name: Configure Git
          run: |
            git config user.name "$GITHUB_ACTOR"
            git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

        - name: Install Helm
          uses: azure/setup-helm@v3
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        #- name: Run chart-releaser
        #  uses: helm/chart-releaser-action@v1.5.0
        #  with:
        #    charts_dir: ./chart
        #  env:
        #    CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

        - name: Chart releaser
          run: |
            # Download chart releaser
            curl -sSLo cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/v1.5.0/chart-releaser_1.5.0_linux_amd64.tar.gz"
            tar -xzf cr.tar.gz
            rm -f cr.tar.gz
            repo=$(cut -d '/' -f 2 <<< "$GITHUB_REPOSITORY")
            owner=$(cut -d '/' -f 1 <<< "$GITHUB_REPOSITORY")
            echo "https://api.github.com/repos/{{repo_name}}$repo/releases/tags/$repo-${{ steps.fix_tag.outputs.tag }}"
            exists=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/{{repo_name}}$repo/releases/tags/$repo-${{ steps.fix_tag.outputs.tag }} -w %{http_code} -o /dev/null)
            if [[ $exists != "200" ]]; then
              echo "Creating release..."
              # package chart
              ./cr package ${{ inputs.chart_path }}/$repo
              # upload chart to github releases
              ./cr upload \
                  --owner "$owner" \
                  --git-repo "$repo" \
                  --token "${{ secrets.GITHUB_TOKEN }}"
              # Update index and push to github pages
              ./cr index \
                  --owner "$owner" \
                  --git-repo "$repo" \
                  --token "${{ secrets.GITHUB_TOKEN }}" \
                  --charts-repo ${{ inputs.chart_url }} \
                  --push
            else
              echo "Release already exists"
            fi

